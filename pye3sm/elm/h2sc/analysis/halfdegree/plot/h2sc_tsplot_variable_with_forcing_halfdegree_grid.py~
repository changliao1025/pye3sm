import os, sys
import argparse
import numpy as np
from netCDF4 import Dataset #it maybe be replaced by gdal
sSystem_paths = os.environ['PATH'].split(os.pathsep)
sys.path.extend(sSystem_paths)

from pyes.system.define_global_variables import *
from pyes.toolbox.date.day_in_month import day_in_month
#import package
sPath_pye3sm = sWorkspace_code +  slash + 'python' + slash + 'e3sm' + slash + 'e3sm_python'
sys.path.append(sPath_pye3sm)
from e3sm.shared import oE3SM
from e3sm.shared.e3sm_read_configuration_file import e3sm_read_configuration_file
def h2sc_tsplot_variable_with_forcing_halfdegree_grid(sFilename_configuration_in,\
                                                      iCase_index,\
                                                      iYear_start_in = None, \
                                                      iYear_end_in =  None,\
                                                      iYear_subset_start_in = None, \
                                                      iYear_subset_end_in = None,\
                                                      dMin_z_in = None, \
                                                      dMax_z_in = None, \
                                                      dSpace_z_in = None, \
                                                      sDate_in= None, \
                                                      sLabel_x_in = None,\
                                                      sLabel_z_in = None ):
    e3sm_read_configuration_file(sFilename_configuration_in,\
                                 iCase_index_in = iCase_index, \
                                 iYear_start_in = iYear_start_in,\
                                 iYear_end_in = iYear_end_in,\
                                 sDate_in= sDate_in)

    sWorkspace_forcing = oE3SM.sWorkspace_forcing
    #read forcing
    iYear_start = 1979
    iYear_end = 2008
    for iYear in np.arrange (iYear_start, iYear_end):
        #sYear = STRING(iYear, format = '(I04)')
     sYear = "{:04d}".format(iYear)
     sYear_out = '/compyfs/liao313/00raw/gpcc' + slash + sYear

     for iMonth in np.arrange (1, 13):
         #sMonth = STRING(iMonth, format = '(I02)')
         sMonth = "{:02d}".format(iMonth)
         sFilename = sWorkspace_forcing + slash + 'clmforc.princeton.GPCC.' + sYear+'-'+sMonth +'.nc'

        aDatasets = Dataset(sFilename, 'r')
        for sKey, aValue in aDatasets.variables.items():
            if "PRECTmms" == sKey:
                aPrec_all = (aValue[:]).data
                break

        dom = day_in_month(iYear, iMonth)
        nts = dom * 8 #3 hour temporal resolution
        for iTime_step in np.arrange( 1, nts+1) :
            #sTime_step = STRING(iTime_step, format = '(I03)')
           aPrec = aPrec_all[:, :, iTime_step-1]

           #resample not needed, we can directly extract

           #aPrec = REBIN(aPrec, 720, 360, /sample)
           #shift





    #read simulation

    return
if __name__ == '__main__':
    iFlag_debug = 1
    if iFlag_debug == 1:
        iIndex_start = 1
        iIndex_end = 1
    else:
        parser = argparse.ArgumentParser()
        parser.add_argument("--iIndex_start", help = "the path",   type = int)
        parser.add_argument("--iIndex_end", help = "the path",   type = int)
        pArgs = parser.parse_args()
        iIndex_start = pArgs.iIndex_start
        iIndex_end = pArgs.iIndex_end

    sModel = 'h2sc'
    sRegion = 'global'
    sDate = '20200413'



    iYear_start = 1980
    iYear_end = 2008
    sVariable='zwt'
    #sVariable = 'drainage'
    #sVariable = 'wt_slp'

    sFilename_configuration = sWorkspace_configuration + slash \
        + sModel + slash \
        + sRegion + slash + 'h2sc_configuration_' + sVariable.lower() + sExtension_txt
    iCase_index_start = iIndex_start
    iCase_index_end = iIndex_end
    aCase_index = np.arange(iCase_index_start, iCase_index_end + 1, 1)

        #iCase_index = 240
    for iCase_index in (aCase_index):
        h2sc_tsplot_variable_with_forcing_halfdegree_grid(sFilename_configuration, \
                                                          iCase_index,\
                                                          iYear_start_in = iYear_start, \
                                                          iYear_end_in =iYear_end,\
                                                          iYear_subset_start_in = 1990, \
                                                          iYear_subset_end_in =2008,\
                                                          dMin_z_in = 0, \
                                                          dMax_z_in = 80, \
                                                          dSpace_z_in = 10, \
                                                          sDate_in= sDate, \
                                                          sLabel_x_in = 'Year',\
                                                          sLabel_z_in = 'Water table depth (m)')

    print('finished')
